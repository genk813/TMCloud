name: TMCloud Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-timeout
    
    - name: Verify test data exists
      run: |
        echo "Checking test data..."
        ls -la test_data/
        if [ ! -f test_data/test_output.db ]; then
          echo "Error: test_output.db not found"
          exit 1
        fi
        if [ ! -d test_data/test_images ]; then
          echo "Error: test_images directory not found"
          exit 1
        fi
    
    - name: Run unit tests
      run: |
        # Use test database for CI
        export TMCLOUD_DB_PATH="test_data/test_output.db"
        export TMCLOUD_IMAGE_PATH="test_data/test_images"
        
        # Run tests with coverage
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=html --timeout=30
    
    - name: Run search functionality tests
      run: |
        export TMCLOUD_DB_PATH="test_data/test_output.db"
        python comprehensive_search_test.py --ci-mode
    
    - name: Check code quality
      run: |
        # Install linting tools
        pip install ruff black isort
        
        # Run linters
        ruff check .
        black --check --line-length 120 .
        isort --check-only .
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Performance benchmark (lightweight)
      run: |
        export TMCLOUD_DB_PATH="test_data/test_output.db"
        python performance_benchmark.py --quick-mode
        
        # Check if any query takes > 100ms (CI threshold)
        if grep -q "SLOW QUERY" benchmark_results.txt; then
          echo "Performance regression detected!"
          cat benchmark_results.txt
          exit 1
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pip-audit safety
    
    - name: Run security audit
      run: |
        # Check for known vulnerabilities
        pip-audit
        safety check
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD