name: Deploy TMCloud

on:
  push:
    branches: [ main ]
    tags:     [ 'v*' ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create test database
        run: python scripts/create_test_database.py

      - name: Run smoke tests
        run: |
          python - <<'PY'
          import sqlite3, time, subprocess, os, signal, sys
          conn = sqlite3.connect('test_data/test_ci.db')
          assert conn.execute('SELECT COUNT(*) FROM jiken_c_t').fetchone()[0] > 0
          conn.close()
          p = subprocess.Popen([sys.executable, 'app_dynamic_join_claude_optimized.py'])
          time.sleep(10)
          import urllib.request, urllib.error
          urllib.request.urlopen('http://localhost:5002/')
          os.kill(p.pid, signal.SIGTERM)
          print('âœ“ Smoke tests passed')
          PY

      - name: Create staging artifact
        run: |
          cd "$GITHUB_WORKSPACE"
          tar --exclude='.git' -czf tmcloud-staging.tar.gz $(git ls-files)

      - name: Upload staging artifact
        uses: actions/upload-artifact@v4
        with:
          name: tmcloud-staging
          path: tmcloud-staging.tar.gz
          retention-days: 30

  deploy-production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install cyclonedx-bom

      - name: Run full test suite
        run: |
          python scripts/create_test_database.py
          python comprehensive_search_test.py

      - name: Generate SBOM
        run: cyclonedx-py -r requirements.txt -o sbom.json

      - name: Create production artifact
        run: |
          cd "$GITHUB_WORKSPACE"
          tar --exclude='.git' -czf tmcloud-production.tar.gz $(git ls-files) sbom.json

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: TMCloud Release ${{ github.ref }}
          body: |
            TMCloud Release ${{ github.ref }}

            ## Deployment
            1. Download the **tmcloud-production.tar.gz** artifact
            2. Extract to your server
            3. `pip install -r requirements.txt`
            4. `python app_dynamic_join_claude_optimized.py`
        draft: false
        prerelease: false

      - name: Upload production artifact
        uses: actions/upload-artifact@v4
        with:
          name: tmcloud-production
          path: tmcloud-production.tar.gz
          retention-days: 90
