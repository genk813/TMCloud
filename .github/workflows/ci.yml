name: CI

# ────── トリガ ──────
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read          # ソース取得
  actions:  read          # （任意）Claude などがログを読む用

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_PATH: test_output.db     # CI では軽量 DB を使う

    steps:
      # 1) リポジトリ取得（Git LFS も）
      - uses: actions/checkout@v4
        with:
          lfs: true

      # 2) 軽量 DB へ差し替え（存在するときだけ）
      - name: Swap in lightweight test DB
        run: |
          if [ -f test_output.db ]; then cp test_output.db output.db; fi

      # 3) Python セットアップ
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      # 4) 依存パッケージ
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 5) pytest（tests/ が無い場合はスキップ）
      - name: Run tests
        if: ${{ hashFiles('tests/**') != '' }}
        run: pytest -q

      # 6) DB が読めるか軽くチェック（失敗してもジョブを落とさない）
      - name: Sanity check DB
        run: python cli_trademark_search.py --limit 1 || true

      # 7) アプリを tar.gz にパッケージ
      - name: Package application
        run: |
          cd "$GITHUB_WORKSPACE"
          tar --exclude='.git' --posix -czf tmcloud-staging.tar.gz $(git ls-files)

      # 8) アーティファクトとして保存（任意）
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tmcloud-staging
          path: tmcloud-staging.tar.gz
